apply plugin: 'com.android.application'
apply plugin: 'com.android.databinding'
apply plugin: 'kotlin-android'
apply plugin: 'me.tatarka.retrolambda'

buildscript {
    ext {
        kotlin_version = '1.0.0-beta-1038'
        androidAptVersion = "1.4"
        dbFlowVersion = "2.1.0"
        gsonVersion = "2.3"
        supportLibVersion = "23.1.0"
        picassoVersion = "2.5.2"
        ottoVersion = "1.3.8"
        okioVersion = "1.5.0"
        okHttpVersion = "2.4.0"
        retrofitVersion = "1.9.0"
        droidIconVersion = "0.1.4@aar"
        daggerVersion = "2.0.1"
        annotationApiVersion = "1.2"
        rxAndroidVersion = "0.25.0"
        ankoVersion = "0.7.2"
        retrolambdaVersion = "2.0.6"

        //test dependency versions
        assertjAndroidVersion = "1.0.0"
        junitVersion = "4.12"
        robolectricVersion = "3.0"
        leakCanaryVersion = "1.3.1"
        espressoVersion = "2.2"
        mockitoVersion = "2.0.31-beta"
    }
    repositories {
        mavenCentral()
        maven { url 'http://oss.sonatype.org/content/repositories/snapshots' }
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "za.foundation.praekelt.mama"
        minSdkVersion 17
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testApplicationId "za.foundation.praekelt.mama.test"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:cardview-v7:$supportLibVersion"
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    kapt('com.android.databinding:compiler:1.0-rc4') {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    compile "com.squareup.picasso:picasso:$picassoVersion"
    compile "com.squareup:otto:$ottoVersion"
    compile "com.squareup.okio:okio:$okioVersion"
    compile "com.squareup.okhttp:okhttp:$okHttpVersion"
    compile "com.squareup.okhttp:okhttp-urlconnection:$okHttpVersion"
    compile "com.squareup.retrofit:retrofit:$retrofitVersion"
    compile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    provided "javax.annotation:javax.annotation-api:$annotationApiVersion"
    compile "io.reactivex:rxandroid:$rxAndroidVersion"
    compile "io.reactivex:rxandroid-framework:$rxAndroidVersion"
    kapt "com.raizlabs.android:DBFlow-Compiler:$dbFlowVersion"
    compile "com.raizlabs.android:DBFlow-Core:$dbFlowVersion"
    compile "com.raizlabs.android:DBFlow:$dbFlowVersion"
    compile "org.jetbrains.anko:anko-sdk15:$ankoVersion" // sdk19, sdk21, sdk23 are also available
    compile "org.jetbrains.anko:anko-support-v4:$ankoVersion"
    retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:$retrolambdaVersion"

    debugCompile "com.squareup.leakcanary:leakcanary-android:1.3.1"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:1.3.1"

    //testing dependencies
    testCompile "junit:junit:$junitVersion"
    testCompile("com.squareup.assertj:assertj-android:$assertjAndroidVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testCompile("org.robolectric:robolectric:$robolectricVersion") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testCompile "org.mockito:mockito-core:$mockitoVersion"

    //Connected tests dependencies
    androidTestCompile ("com.android.support.test:runner:0.3"){
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile ("com.android.support.test:rules:0.3"){
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile ("com.android.support.test.espresso:espresso-core:$espressoVersion"){
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile("com.squareup.assertj:assertj-android:$assertjAndroidVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$espressoVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
}
repositories {
    mavenCentral()
    maven { url "https://raw.github.com/Raizlabs/maven-releases/master/releases" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

kapt {
    generateStubs = true
}

retrolambda {
    javaVersion JavaVersion.VERSION_1_7
    jvmArgs "-noverify"
}

// Recompiles the instrumentation test apk and installs it on device
task recompileInstallInstrumentTest (dependsOn:['assembleAndroidTest', 'installDebugAndroidTest'])

// Recompiles instrumentation test apk installs and runs all tests
task recompileRunInstrumentationTest (type: Exec, dependsOn:['recompileInstallInstrumentTest']){
    commandLine "${android.getSdkDirectory().getAbsolutePath()}/platform-tools/adb",
            'shell', 'am', 'instrument', '-w',
            'za.foundation.praekelt.mama.test/android.support.test.runner.AndroidJUnitRunner'
}

// Runs instrumentation test only
task runInstrumentationTest(type: Exec){
    commandLine "${android.getSdkDirectory().getAbsolutePath()}/platform-tools/adb",
            'shell', 'am', 'instrument', '-w',
            'za.foundation.praekelt.mama.test/android.support.test.runner.AndroidJUnitRunner'
}
